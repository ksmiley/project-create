package edu.uky.comm.rcap{	import flash.display.Sprite;	import flash.display.InteractiveObject;	import flash.events.Event;	import flash.events.MouseEvent;		import fl.containers.ScrollPane;		import edu.uky.comm.rcap.RenderPreview;		public class PreviewPanel extends Sprite	{		private static const DEFAULT_ZOOM_IN:Class = ZoomIn;		private static const DEFAULT_ZOOM_OUT:Class = ZoomOut;		private static const ZOOM_BTN_SPACING:Number = 5;				private var _pane:ScrollPane;		private var _zoomInBtn:InteractiveObject;		private var _zoomOutBtn:InteractiveObject;				private var _shrinkScrollPane:Boolean = false;		private var _paneWidth:Number;		private var _paneHeight:Number;		private var _zoomWidth:Number = 1000;		private var _zoomHeight:Number = 1000;				private var _zoomed:Boolean;		private var _zoomable:Boolean;		private var _renderer:RenderPreview;				public function PreviewPanel(source:RenderPreview = null):void		{			_zoomed = false;			_zoomable = true;			_renderer = source;						//var newSkin:Sprite = new Sprite();			//newSkin.graphics.clear();			//newSkin.graphics.beginFill(uint(0x9e8770), 0.8);			//newSkin.graphics.drawRect(0,0,272.0, 191.0);			//newSkin.graphics.endFill();			_pane = new ScrollPane();			//_pane.scrollDrag = true;			_pane.tabEnabled = false;			//_pane.setStyle("skin", newSkin);			//_pane.setStyle("upSkin", newSkin);			addChild(_pane);						_zoomInBtn = new DEFAULT_ZOOM_IN();			_zoomInBtn.addEventListener(MouseEvent.CLICK, _zoomClickHandler);			_zoomOutBtn = new DEFAULT_ZOOM_OUT();			_zoomOutBtn.addEventListener(MouseEvent.CLICK, _zoomClickHandler);		}				public function get renderer():RenderPreview		{			return _renderer;		}				public function set renderer(source:RenderPreview):void		{			if (_renderer != null)			{				_pane.source = null;				_renderer = null;			}			if (source != null)			{				_renderer = source;				_pane.source = _renderer;				//_zoomed = false;				_resizeAndCenter();				_pane.update();				//_updateZoomButtons();			}		}				public function get zoomed():Boolean		{			return _zoomed;		}				public function set zoomed(value:Boolean):void		{			if (value != _zoomed)			{				_zoomed = value;				_pane.scrollDrag = value;				_updateZoomButtons();				if (_renderer != null)  _resizeAndCenter();			}		}				public function get zoomable():Boolean		{			return _zoomable;		}				public function set zoomable(value:Boolean):void		{			if (_zoomable != value)			{				_zoomable = value;				setSize(width, height);  // will adjust for zoom buttons			}		}				override public function set width(value:Number):void		{			setSize(value, height);		}				override public function set height(value:Number):void		{			setSize(width, value);		}						public function get zoomWidth():Number		{			return _zoomWidth;		}				public function get zoomHeight():Number		{			return _zoomHeight;		}				public function get paneWidth():Number		{			return _paneWidth;		}				public function get paneHeight():Number		{			return _paneHeight;		}				public function setSize(newWidth:Number, newHeight:Number):void		{			if (_zoomable)			{				_paneWidth  = newWidth;				_paneHeight = newHeight - _zoomInBtn.height - ZOOM_BTN_SPACING;				_placeZoomButtons();			}			else			{				_paneWidth  = newWidth;				_paneHeight = newHeight;			}			_pane.width  = _paneWidth;			_pane.height = _paneHeight;			_placeZoomButtons();			//super.width  = newWidth;			//super.height = newHeight;		}				private function setZoomSize(newWidth:Number, newHeight:Number):void		{			_zoomWidth  = newWidth;			_zoomHeight = newHeight;		}				private function _placeZoomButtons():void		{			if (_zoomable)			{				_zoomOutBtn.y = _zoomInBtn.y = _paneHeight + ZOOM_BTN_SPACING;				_zoomOutBtn.x = _paneWidth - _zoomOutBtn.width - ZOOM_BTN_SPACING;				_zoomInBtn.x  = _zoomOutBtn.x - _zoomInBtn.width - ZOOM_BTN_SPACING;				addChild(_zoomOutBtn);				addChild(_zoomInBtn);				_updateZoomButtons();			}			else 			{				if (contains(_zoomOutBtn))  removeChild(_zoomOutBtn);				if (contains(_zoomInBtn))   removeChild(_zoomInBtn);			}		}		private function _updateZoomButtons():void		{			if (_zoomed)			{				_zoomInBtn.alpha  = 0.5;				_zoomInBtn.mouseEnabled = false;				if (_zoomInBtn is Sprite)  Sprite(_zoomInBtn).buttonMode = false;				if (_zoomInBtn is InteractiveObject)  InteractiveObject(_zoomInBtn).tabEnabled = false;				_zoomOutBtn.alpha = 1.0;				_zoomOutBtn.mouseEnabled = true;				if (_zoomOutBtn is Sprite)  Sprite(_zoomOutBtn).buttonMode = true;				/*if (_zoomOutBtn is InteractiveObject)				{					InteractiveObject(_zoomOutBtn).tabEnabled = true;					if (stage != null)  stage.focus = InteractiveObject(_zoomOutBtn);				}*/			}			else			{				_zoomInBtn.alpha  = 1.0;				_zoomInBtn.mouseEnabled = true;				if (_zoomInBtn is Sprite)  Sprite(_zoomInBtn).buttonMode = true;				if (_zoomInBtn is InteractiveObject)  InteractiveObject(_zoomInBtn).tabEnabled = true;				_zoomOutBtn.alpha = 0.5;				_zoomOutBtn.mouseEnabled = false;				if (_zoomOutBtn is Sprite)  Sprite(_zoomOutBtn).buttonMode = false;				/*if (_zoomOutBtn is InteractiveObject)				{					InteractiveObject(_zoomOutBtn).tabEnabled = false;					if (stage != null)  stage.focus = InteractiveObject(_zoomInBtn);				}*/			}		}				private function _resizeAndCenter():void		{			if (_zoomed)			{				_renderer.x = 0;				_renderer.y = 0;				if (_shrinkScrollPane)				{					_pane.setSize(_paneWidth, _paneHeight);					_pane.x = 0;					_pane.y = 0;				}				_renderer.setSize(_zoomWidth, _zoomHeight);			}			else			{				_renderer.setSize(_paneWidth, _paneHeight);				if (_shrinkScrollPane)				{					_renderer.x = 0;					_renderer.y = 0;					_pane.setSize(_renderer.width, _renderer.height);					_pane.x = Math.floor((_paneWidth - _pane.width) / 2);					_pane.y = Math.floor((_paneHeight - _pane.height) / 2);				}				else				{					_renderer.x = Math.floor((_paneWidth  - _renderer.width)  / 2);					_renderer.y = Math.floor((_paneHeight - _renderer.height) / 2);				}			}						_pane.update();		}				private function _zoomClickHandler(e:MouseEvent):void		{			var btn:InteractiveObject = e.currentTarget as InteractiveObject;			if (btn === _zoomInBtn)			{				zoomed = true;			}			else			{				zoomed = false;			}		}	}}